/* Pull to Refresh Indicator */

.pull-to-refresh-indicator {
  position: absolute;
  top: -80px;
  left: 50%;
  transform: translateX(-50%);
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: opacity 200ms ease;
  pointer-events: none;
  z-index: 100;
}

.refresh-spinner {
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--md-sys-color-surface-container-high);
  border-radius: 50%;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  transition: transform 150ms ease;
}

.refresh-spinner .material-symbols-rounded {
  font-size: 24px;
  color: var(--md-sys-color-on-surface);
}

/* Ready state - change color when threshold reached */
.pull-to-refresh-indicator.ready .refresh-spinner {
  background-color: var(--md-sys-color-primary-container);
}

.pull-to-refresh-indicator.ready .material-symbols-rounded {
  color: var(--md-sys-color-on-primary-container);
}

/* Refreshing state - continuous rotation */
.pull-to-refresh-indicator.refreshing {
  opacity: 1 !important;
}

.pull-to-refresh-indicator.refreshing .refresh-spinner {
  animation: spinRefresh 800ms linear infinite;
  background-color: var(--md-sys-color-primary-container);
}

.pull-to-refresh-indicator.refreshing .material-symbols-rounded {
  color: var(--md-sys-color-on-primary-container);
}

@keyframes spinRefresh {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
